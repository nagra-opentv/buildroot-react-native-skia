--- a/rns_shell/common/Window.h	2023-03-29 13:40:43.000000000 +0530
+++ b/rns_shell/common/Window.h	2023-04-01 08:07:18.341584211 +0530
@@ -47,7 +47,7 @@
     virtual void setTitle(const char*) = 0;
     virtual void show() = 0;
     virtual void closeWindow() = 0;
-    virtual uint64_t nativeWindowHandle() = 0;
+    virtual GLNativeWindowType nativeWindowHandle() = 0;
     virtual SkSize getWindowSize() = 0;

     enum BackendType {
--- a/rns_shell/compositor/Compositor.h	2023-03-29 13:40:43.000000000 +0530
+++ b/rns_shell/compositor/Compositor.h	2023-04-01 08:14:27.367651462 +0530
@@ -28,7 +28,7 @@

     class Client {
     public:
-        virtual uint64_t nativeSurfaceHandle() = 0;
+        virtual GLNativeWindowType nativeSurfaceHandle() = 0;
         virtual void didRenderFrame() = 0;
     };

--- a/rns_shell/compositor/LayerTreeHost.cpp	2023-03-29 13:40:43.000000000 +0530
+++ b/rns_shell/compositor/LayerTreeHost.cpp	2023-04-01 08:09:45.368898755 +0530
@@ -27,7 +27,7 @@
   window_ = nullptr;
 }

-uint64_t LayerTreeHost::nativeSurfaceHandle() {
+GLNativeWindowType LayerTreeHost::nativeSurfaceHandle() {
   return window_->nativeWindowHandle();
 }

--- a/rns_shell/compositor/LayerTreeHost.h	2023-03-29 13:40:43.000000000 +0530
+++ b/rns_shell/compositor/LayerTreeHost.h	2023-04-01 08:13:24.787922265 +0530
@@ -37,12 +37,12 @@
     ~CompositorClient(){};

    private:
-    uint64_t nativeSurfaceHandle() override { return layerTreeHost_.nativeSurfaceHandle(); }
+    GLNativeWindowType nativeSurfaceHandle() override { return layerTreeHost_.nativeSurfaceHandle(); }
     void didRenderFrame() override { layerTreeHost_.didRenderFrame(); }
     LayerTreeHost& layerTreeHost_;
   };

-  uint64_t nativeSurfaceHandle();
+  GLNativeWindowType nativeSurfaceHandle();
   void didRenderFrame();

   Application& app_;
--- a/rns_shell/platform/graphics/libwpe/WindowLibWPE.h	2023-03-29 13:40:43.000000000 +0530
+++ b/rns_shell/platform/graphics/libwpe/WindowLibWPE.h	2023-04-01 08:07:57.541398473 +0530
@@ -47,7 +47,7 @@
     ~WindowLibWPE() override;
     bool initWindow(PlatformDisplay* display,SkSize dimension,WindowType winType);
     void closeWindow() override;
-    uint64_t nativeWindowHandle() override {return (uint64_t) window_; }
+    GLNativeWindowType nativeWindowHandle() override {return window_; }
     SkSize getWindowSize() override { return {viewWidth_, viewHeight_}; }

     bool handleEvent();
--- a/rns_shell/platform/graphics/x11/WindowX11.h	2023-03-29 13:40:43.000000000 +0530
+++ b/rns_shell/platform/graphics/x11/WindowX11.h	2023-04-01 08:08:51.617145915 +0530
@@ -51,7 +51,7 @@

     bool initWindow(PlatformDisplay* display,SkSize dimension,WindowType winType);
     void closeWindow() override;
-    uint64_t nativeWindowHandle() override {return (uint64_t) window_; }
+    GLNativeWindowType nativeWindowHandle() override {return (GLNativeWindowType) window_; }
     SkSize getWindowSize() override {
         XWindowAttributes winAttr = {0,};
         XGetWindowAttributes(display_, window_, &winAttr);
